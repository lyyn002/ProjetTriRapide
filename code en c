#include <stdio.h>
#include <stdbool.h>
#include <raylib.h>
#define MAX_SIZE 100


//AP pour le tri rapide
void tri_rapide (int arr[] , int deb , int fin ){
     int i, j;
     int pivot = arr[fin];
     int tmp;
     i=deb-1;
     if(deb<fin){
     for (j = deb ;j< fin ;j++ ){
         if (arr[j]<= pivot ){
            i= i+1;
             tmp= arr[i];
             arr[i]=arr[j];
             arr[j]=tmp;
         }
     }

      tmp = arr[i+1];
      arr[i+1]= arr[fin];
      arr[fin] = tmp;
      const int screenWidth = 800;
    const int screenHeight = 450;
    InitWindow(screenWidth, screenHeight, "Tri rapide avec raylib");

    SetTargetFPS(60);
    while (!WindowShouldClose()) {


        BeginDrawing();
        ClearBackground(RAYWHITE);
        DrawText("Tri rapide avec raylib", 10, 10, 20, BLACK);
        drawArray(arr, fin, 100, 150, 120, 100, RED);

        EndDrawing();

    }

    CloseWindow();
      tri_rapide(arr,deb,i);
      tri_rapide (arr,i+2,fin);
     }
   }
//AP pour inserer un élément dans le tableau trié
void insertElement(int arr[], int *size, int element) {
    if (*size < MAX_SIZE) {
        int i = *size - 1;

        while (i >= 0 && arr[i] > element) {
            arr[i + 1] = arr[i];
            i--;
        }

        arr[i + 1] = element;
        (*size)++;
    } else {
        printf("Le tableau est plein. Impossible d'ajouter un nouvel élément.\n");
    }
}

//AP pour supprimer un élément dans le tableau trié
void deleteElement(int arr[],int *size,int element){
    int i;

    for (i = 0; i < *size; i++) {
        if (arr[i] == element)
            break;
    }

    if (i < *size) {
        for (int j = i; j < *size - 1; j++) {
            arr[j] = arr[j + 1];
        }
        (*size)--;
        printf("L'élément %d a été supprimé du tableau.\n", element);
        printf("Tableau après la suppression de %d :\n", element);
    } else {
        printf("L'élément %d n'a pas été trouvé dans le tableau. Suppression impossible.\n", element);
    }
}
//dessin raylib 
void drawArray(int arr[], int size, int x, int y, int width, int height, Color color) {
    int barWidth = width / size;
    int barHeight = height / size;

    for (int i = 0; i < size; i++) {
        int barX = x + i * barWidth;
        int barY = y + height - arr[i] * barHeight;
        int barW = barWidth - 2;
        int barH = arr[i] * barHeight;
        DrawRectangle(barX, barY, barW, barH, color);
    }
}



//la partie main

int main(){

int arr[MAX_SIZE];
int n;

do{
    printf("Donnez la taille initiale de votre tableau : ");
    scanf("%d", &n);
} while ((n<0)||(n>100));


    // Remplir le tableau
    printf("Donnez les éléments du tableau trié :\n");
    for (int i = 0; i < n; i++) {
        printf("arr[%d] : ", i+1);
        scanf("%d", &arr[i]);
    }

const int screenWidth = 800;
    const int screenHeight = 450;
    InitWindow(screenWidth, screenHeight, "Tri rapide avec raylib");

    SetTargetFPS(60);
    while (!WindowShouldClose()) {

        BeginDrawing();
        ClearBackground(RAYWHITE);
        DrawText("Tri rapide avec raylib", 10, 10, 20, BLACK);
        drawArray(arr, n, 100, 150, 120, 100, RED);

        EndDrawing();

    }

    //Tri du tableau
    tri_rapide ( arr ,0 , n-1);

 InitWindow(screenWidth, screenHeight, "Tri rapide avec raylib");

    SetTargetFPS(60);
    while (!WindowShouldClose()) {

        BeginDrawing();
        ClearBackground(RAYWHITE);
        DrawText("Tri rapide avec raylib", 10, 10, 20, BLACK);
        drawArray(arr, n, 100, 150, 120, 100, RED);

        EndDrawing();

    }

    CloseWindow();

  
   //menu des choix
char choix;
int valeur;

    do {
        printf("\n");
        printf("Choisissez une option :\n");
        printf("1. Insérer un élément\n");
        printf("2. Supprimer un élément\n");
        printf("0. Quitter\n");
        printf("Votre choix : ");
        scanf(" %c", &choix);

        switch (choix) {
            case '1':
                printf("Donnez l'élément à insérer : ");
                scanf("%d", &valeur);
                 InitWindow(screenWidth, screenHeight, "Tri rapide avec raylib");

    SetTargetFPS(60);
    while (!WindowShouldClose()) {

        BeginDrawing();
        ClearBackground(RAYWHITE);
        DrawText("Tri rapide avec raylib", 10, 10, 20, BLACK);
        drawArray(arr, n, 100, 150, 120, 100, RED);

        EndDrawing();

    }

    CloseWindow();

                 insertElement( arr,  &n,  valeur);

               InitWindow(screenWidth, screenHeight, "Tri rapide avec raylib");

    SetTargetFPS(60);
    while (!WindowShouldClose()) {

        BeginDrawing();
        ClearBackground(RAYWHITE);
        DrawText("Tri rapide avec raylib", 10, 10, 20, BLACK);
        drawArray(arr, n, 100, 150, 120, 100, RED);

        EndDrawing();

    }

    CloseWindow();
               break;
        case '2':
                printf("Donnez l'élément à supprimer : ");
                scanf("%d", &valeur);

               InitWindow(screenWidth, screenHeight, "Tri rapide avec raylib");

    SetTargetFPS(60);
    while (!WindowShouldClose()) {

        BeginDrawing();
        ClearBackground(RAYWHITE);
        DrawText("Tri rapide avec raylib", 10, 10, 20, BLACK);
        drawArray(arr, n, 100, 150, 120, 100, RED);

        EndDrawing();

    }

    CloseWindow();
                deleteElement(arr,&n,valeur);
              InitWindow(screenWidth, screenHeight, "Tri rapide avec raylib");

    SetTargetFPS(60);
    while (!WindowShouldClose()) {

        BeginDrawing();
        ClearBackground(RAYWHITE);
        DrawText("Tri rapide avec raylib", 10, 10, 20, BLACK);
        drawArray(arr, n, 100, 150, 120, 100, RED);

        EndDrawing();

    }

    CloseWindow();
                break;

            case '0':
                break;

            default:
                printf("Option invalide. Veuillez choisir à nouveau.\n");
        }
    } while (choix != '0');
 return 0;
}
  
    






